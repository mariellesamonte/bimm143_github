---
title: "Class 14 RNA-seq mini-project"
author: "Marielle Samonte (A16861951)"
format: pdf
toc: TRUE
---

The data for for hands-on session comes from GEO entry: GSE37704, which is associated with the following publication:

Trapnell C, Hendrickson DG, Sauvageau M, Goff L et al. "Differential analysis of gene regulation at transcript resolution with RNA-seq". Nat Biotechnol 2013 Jan;31(1):46-53. PMID: 23222703

The authors report on differential analysis of lung fibroblasts in response to loss of the developmental transcription factor HOXA1.

# Required packages

```{r, message=FALSE}
library(DESeq2)
library(AnnotationDbi)
library(org.Hs.eg.db)
library(pathview)
library(gage)
library(gageData)
```

# Data import

```{r}
colData <- read.csv("GSE37704_metadata.csv", row.names = 1)
countData <- read.csv("GSE37704_featurecounts.csv", row.names = 1)
```

```{r}
head(colData)
```

# Tidy counts to match metadata

Check the correspondance of colData rows and countData columns.

```{r}
rownames(colData)
```
```{r}
colnames(countData)
```

Remove the troublesome first column so we match the metadata
```{r}
counts <- countData[,-1]
```

```{r}
head(counts)
```


```{r}
all ( rownames(colData) == colnames(counts) )
```
# Remove zero count genes

We will have rows in `counts` for genes that we can not say anything about because they have zero expression in the particular tissue we are looking at.

```{r}
head(counts)
```
If the `rowSums()` is zero then a given gene (i.e. row) has no count data and we should exclude these genes from further consideration.

```{r}
to.keep <- rowSums(counts) != 0
cleancounts <- counts[to.keep, ]
```

> Q. How many genes do we have left?

```{r}
nrow(cleancounts)
```

# Setup DESeq object for analysis

```{r}
dds <- DESeqDataSetFromMatrix(countData = cleancounts,
                              colData = colData,
                              design = ~condition)
```


# Run DESeq analysis

```{r}
dds <- DESeq(dds)
```


# Extract the results

```{r}
res <- results(dds)
head(res)
```

# Add Gene annotation

```{r}
res$name <- mapIds(x=org.Hs.eg.db,
                     keys=rownames(res),
                     keytype= "ENSEMBL",
                     column= "GENENAME",
                   multiVals="first")

res$entrez <- mapIds(x=org.Hs.eg.db,
                     keys=rownames(res),
                     keytype= "ENSEMBL",
                     column= "ENTREZID", 
                     multiVals="first")

res$symbol = mapIds(org.Hs.eg.db,
                    keys=rownames(res), 
                    keytype="ENSEMBL",
                    column="SYMBOL",
                    multiVals="first")
head(res)
```

# Save my results to a CSV file

```{r}
write.csv(res, file="results.csv")
```

# Result visualization

```{r}
mycols <- rep("gray", nrow(res))
mycols[ res$log2FoldChange <= -2 ] <- "blue"
mycols[ res$log2FoldChange >= +2 ] <- "blue"
mycols[ res$padj >= 0.05 ] <- "gray"

plot(res$log2FoldChange, -log(res$padj), col=mycols)

abline(v=-2, col="red")
abline(v=+2, col="red")
abline(h=-log(0.05), col="red")

```

```{r}
library(ggplot2)
library(ggrepel)

ggplot(res) +
  aes(log2FoldChange, -log(padj)) +
  geom_point(col=mycols)
```

```{r}
res <- as.data.frame(res)
ggplot(res,
       aes(x=log2FoldChange, y=-log10(pvalue))) +
  geom_point(col=mycols) +
  theme_minimal() +
  geom_text_repel(label=res$symbol) +
  labs(title = "Volcano plot", x = "log2 fold change", y = "-log10 p-value")
```

# Pathway analysis

## KEGG genesets / pathways

```{r}
data(kegg.sets.hs)
data(sigmet.idx.hs)

# Focus on signaling and metabolic pathways only
kegg.sets.hs = kegg.sets.hs[sigmet.idx.hs]

# Examine the first 3 pathways
head(kegg.sets.hs, 3)
```

```{r}
foldchanges = res$log2FoldChange
names(foldchanges) = res$entrez
head(foldchanges)
```

```{r}
# Get the results
keggres = gage(foldchanges, gsets=kegg.sets.hs)
```

```{r}
attributes(keggres)
```

```{r}
# Look at the first few down (less) pathways
head(keggres$less)
```

```{r}
pathview(gene.data=foldchanges, pathway.id="hsa04110")
```
![](hsa04110.pathview.png )

## Gene Ontology

```{r}
data(go.sets.hs)
data(go.subs.hs)

# Focus on Biological Process subset of GO
gobpsets = go.sets.hs[go.subs.hs$BP]

gobpres = gage(foldchanges, gsets=gobpsets)
```

```{r}
head(gobpres$less, 5)
```

## Reactome analysis online

We need to make a little file of our significant genes that we can upload to the reactome webpage:

```{r}
sig_genes <- res[res$padj <= 0.05 & !is.na(res$padj), "symbol"]
print(paste("Total number of significant genes:", length(sig_genes)))
```

```{r}
sig_genes[6]
```

```{r}
write.table(sig_genes, file="significant_genes.txt", row.names=FALSE, col.names=FALSE, quote=FALSE)
```

Then, to perform pathway analysis online go to the Reactome website (https://reactome.org/PathwayBrowser/#TOOL=AT). Select “choose file” to upload your significant gene list. Then, select the parameters “Project to Humans”, then click “Analyze”.

![](R-HSA-69278.png)



